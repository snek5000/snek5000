[metadata]
author = Ashwin Vishnu Mohanan
author_email = ashwinvis+gh@protonmail.com
url = https://github.com/exabl/snek5000
name = snek5000
description = Python framework for Nek5000
long_description = file: README.md
long_description_content_type = text/markdown
license = BSD-3-Clause
license_files = LICENSE
classifiers =
        Development Status :: 4 - Beta
        Intended Audience :: Science/Research
        License :: OSI Approved :: BSD License
        Natural Language :: English
        Programming Language :: Python :: 3 :: Only
        Programming Language :: Python :: 3.8
        Programming Language :: Python :: 3.9
        Topic :: Scientific/Engineering
project-urls =
    Bug Tracker = https://github.com/exabl/snek5000/issues
    Documentation = https://snek5000.readthedocs.io
    Changelog = https://snek5000.readthedocs.io/en/latest/CHANGELOG.html

[options]
python_requires = >= 3.8
package_dir=
    =src
packages=find:
install_requires =
    snakemake >= 6.8.1
    fluidsim-core >= 0.5.0
    pymech >= 1.4.1
    jinja2
    inflection
    importlib_resources; python_version < "3.7"

[options.entry_points]
snek5000.solvers =
    nek = snek5000.solvers.base
    kth = snek5000.solvers.kth

[options.extras_require]
docs =
    sphinx
    myst-parser
    myst-nb
    docutils <0.18, >=0.14  # sphinx, myst-parser and myst-nb is incompatible with docutils==0.18
    sphinx-copybutton
    furo
    breathe
    setuptools_scm
    nbdime
    # https://github.com/sphinx-doc/sphinx/issues/8198
    pygments >= 2.4.1

tests =
    pytest
    pytest-cov
    pytest-datadir
    ipython
    pymech

hpc =
    %(tests)s
    click

dev =
    %(docs)s
    %(hpc)s
    sphinx-autobuild
    rich
    pdbpp
    python-lsp-server
    fortran-language-server
    pre-commit>=2.9.0
    twine
    build

[options.packages.find]
where=src

[options.package_data]
snek5000 = assets/*.smk, assets/*.yml, assets/*.j2

[flake8]
ignore = E501,W503,W505
max-line-length = 82

## Not possible because we have a git dependency in tests
# [bdist_wheel]
# universal = 1

[coverage:run]
source =
  ./src
data_file = .coverage/coverage
omit =
    */try_*.py
    */_old_*.py

[coverage:report]
show_missing = True
exclude_lines =
    if __name__ == .__main__.:
    if "sphinx" in sys.modules:
    raise ValueError
    raise NotImplementedError
    except KeyError:
    except ImportError:
    except AttributeError:
    except NotImplementedError:

[coverage:html]
directory = .coverage/html
