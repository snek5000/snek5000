name: Tests

on:
  push:
    branches: [ main ]
    tags: ['*']
  pull_request:
    branches: [ main ]

env:
  PIP_CACHE_DIR: ~/.cache/pip

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5
      matrix:
        python-version: [3.8, 3.9]

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Install apt packages
      run: |
        sudo apt-get update
        sudo apt-get install gfortran libopenmpi-dev

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip requirements
      id: pip-cache
      uses: actions/cache@v2
      with:
        path: ${{ env.PIP_CACHE_DIR }}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.*') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Verify Python environment
      run: |
        pip list
        pip cache list

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[tests]
        pip install --no-deps -r ./requirements-tests.txt

    - name: Run tests
      run: |
        source activate.sh
        export SNEK_DEBUG=1
        pytest -v --cov-report=xml tests/test_make.py &
        pytest -v --no-cov tests/test_make.py
        pytest -v --runslow --cov-report=xml --cov-append --cov-report=term-missing

    - name: Upload coverage to codecov
      if: ${{ success() }}
      uses: codecov/codecov-action@v2

  docs:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Install apt packages
      run: |
        sudo apt-get update
        sudo apt-get install gfortran libopenmpi-dev

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Cache pip requirements
      id: pip-cache-docs
      uses: actions/cache@v2
      with:
        path: ${{ env.PIP_CACHE_DIR }}
        key: ${{ runner.os }}-pip-docs-${{ hashFiles('**/setup.*') }}
        restore-keys: |
          ${{ runner.os }}-pip-docs-

    - name: Verify Python environment
      run: |
        pip list
        pip cache list

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[docs]
        pip install --no-deps "phill @ git+https://github.com/exabl/snek5000-phill.git"
        pip install --no-deps "snek5000-cbox @ git+https://github.com/exabl/snek5000-cbox.git@stable"

    - name: Build docs
      run: |
        SPHINXOPTS="-W" make -C docs html

  deploy:
    needs: [docs, build]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Package
      run: |
        pip install build
        python -m build

    - name: Publish package
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
        # password: ${{ secrets.PYPI_API_TOKEN }}
